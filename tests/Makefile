# Makefile.in generated by automake 1.15 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/apophenia
pkgincludedir = $(includedir)/apophenia
pkglibdir = $(libdir)/apophenia
pkglibexecdir = $(libexecdir)/apophenia
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
check_PROGRAMS = db_tests$(EXEEXT) error_test$(EXEEXT) \
	factors$(EXEEXT) nist_tests$(EXEEXT) sort_example$(EXEEXT) \
	test_apop$(EXEEXT) $(top_builddir)/eg/apop_map_row$(EXEEXT) \
	$(top_builddir)/eg/binning$(EXEEXT) \
	$(top_builddir)/eg/boot_clt$(EXEEXT) \
	$(top_builddir)/eg/data_fill$(EXEEXT) \
	$(top_builddir)/eg/draw_to_db$(EXEEXT) \
	$(top_builddir)/eg/db_fns$(EXEEXT) \
	$(top_builddir)/eg/dot_products$(EXEEXT) \
	$(top_builddir)/eg/entropy_vector$(EXEEXT) \
	$(top_builddir)/eg/iv$(EXEEXT) \
	$(top_builddir)/eg/ks_tests$(EXEEXT) \
	$(top_builddir)/eg/logit$(EXEEXT) \
	$(top_builddir)/eg/fake_logit$(EXEEXT) \
	$(top_builddir)/eg/normalization_demo$(EXEEXT) \
	$(top_builddir)/eg/ols$(EXEEXT) \
	$(top_builddir)/eg/ols_oneliner$(EXEEXT) \
	$(top_builddir)/eg/parameterization$(EXEEXT) \
	$(top_builddir)/eg/simple_subsets$(EXEEXT) \
	$(top_builddir)/eg/t_test_by_rows$(EXEEXT) \
	$(top_builddir)/eg/test_distances$(EXEEXT) \
	$(top_builddir)/eg/test_fisher$(EXEEXT) \
	$(top_builddir)/eg/test_harmonic$(EXEEXT) \
	$(top_builddir)/eg/test_pruning$(EXEEXT) \
	$(top_builddir)/eg/test_regex$(EXEEXT) $(am__EXEEXT_1)
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = utilities_test
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = distribution_tests$(EXEEXT) \
#	lognormal_test$(EXEEXT) \
#	rake_test$(EXEEXT) \
#	test_kernel_ll$(EXEEXT) \
#	update_via_rng$(EXEEXT) \
#	$(top_builddir)/eg/cross_models$(EXEEXT) \
#	$(top_builddir)/eg/dconstrain$(EXEEXT) \
#	$(top_builddir)/eg/entropy_model$(EXEEXT) \
#	$(top_builddir)/eg/faithful$(EXEEXT) \
#	$(top_builddir)/eg/f_test$(EXEEXT) \
#	$(top_builddir)/eg/fix_params$(EXEEXT) \
#	$(top_builddir)/eg/hills2$(EXEEXT) \
#	$(top_builddir)/eg/jack$(EXEEXT) \
#	$(top_builddir)/eg/jacobian$(EXEEXT) \
#	$(top_builddir)/eg/ml_imputation$(EXEEXT) \
#	$(top_builddir)/eg/pmf_test$(EXEEXT) \
#	$(top_builddir)/eg/some_cdfs$(EXEEXT) \
#	$(top_builddir)/eg/test_kl_divergence$(EXEEXT) \
#	$(top_builddir)/eg/test_ranks$(EXEEXT) \
#	$(top_builddir)/eg/test_updating$(EXEEXT) \
#	$(top_builddir)/eg/transform$(EXEEXT)
__top_builddir__eg_apop_map_row_SOURCES =  \
	$(top_builddir)/eg/apop_map_row.c
__top_builddir__eg_apop_map_row_OBJECTS = apop_map_row.$(OBJEXT)
__top_builddir__eg_apop_map_row_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am__dirstamp = $(am__leading_dot)dirstamp
__top_builddir__eg_binning_SOURCES = $(top_builddir)/eg/binning.c
__top_builddir__eg_binning_OBJECTS = binning.$(OBJEXT)
__top_builddir__eg_binning_LDADD = $(LDADD)
__top_builddir__eg_boot_clt_SOURCES = $(top_builddir)/eg/boot_clt.c
__top_builddir__eg_boot_clt_OBJECTS = boot_clt.$(OBJEXT)
__top_builddir__eg_boot_clt_LDADD = $(LDADD)
__top_builddir__eg_cross_models_SOURCES =  \
	$(top_builddir)/eg/cross_models.c
__top_builddir__eg_cross_models_OBJECTS = cross_models.$(OBJEXT)
__top_builddir__eg_cross_models_LDADD = $(LDADD)
__top_builddir__eg_data_fill_SOURCES = $(top_builddir)/eg/data_fill.c
__top_builddir__eg_data_fill_OBJECTS = data_fill.$(OBJEXT)
__top_builddir__eg_data_fill_LDADD = $(LDADD)
__top_builddir__eg_db_fns_SOURCES = $(top_builddir)/eg/db_fns.c
__top_builddir__eg_db_fns_OBJECTS = db_fns.$(OBJEXT)
__top_builddir__eg_db_fns_LDADD = $(LDADD)
__top_builddir__eg_dconstrain_SOURCES =  \
	$(top_builddir)/eg/dconstrain.c
__top_builddir__eg_dconstrain_OBJECTS = dconstrain.$(OBJEXT)
__top_builddir__eg_dconstrain_LDADD = $(LDADD)
__top_builddir__eg_dot_products_SOURCES =  \
	$(top_builddir)/eg/dot_products.c
__top_builddir__eg_dot_products_OBJECTS = dot_products.$(OBJEXT)
__top_builddir__eg_dot_products_LDADD = $(LDADD)
__top_builddir__eg_draw_to_db_SOURCES =  \
	$(top_builddir)/eg/draw_to_db.c
__top_builddir__eg_draw_to_db_OBJECTS = draw_to_db.$(OBJEXT)
__top_builddir__eg_draw_to_db_LDADD = $(LDADD)
__top_builddir__eg_entropy_model_SOURCES =  \
	$(top_builddir)/eg/entropy_model.c
__top_builddir__eg_entropy_model_OBJECTS = entropy_model.$(OBJEXT)
__top_builddir__eg_entropy_model_LDADD = $(LDADD)
__top_builddir__eg_entropy_vector_SOURCES =  \
	$(top_builddir)/eg/entropy_vector.c
__top_builddir__eg_entropy_vector_OBJECTS = entropy_vector.$(OBJEXT)
__top_builddir__eg_entropy_vector_LDADD = $(LDADD)
__top_builddir__eg_f_test_SOURCES = $(top_builddir)/eg/f_test.c
__top_builddir__eg_f_test_OBJECTS = f_test.$(OBJEXT)
__top_builddir__eg_f_test_LDADD = $(LDADD)
__top_builddir__eg_faithful_SOURCES = $(top_builddir)/eg/faithful.c
__top_builddir__eg_faithful_OBJECTS = faithful.$(OBJEXT)
__top_builddir__eg_faithful_LDADD = $(LDADD)
__top_builddir__eg_fake_logit_SOURCES =  \
	$(top_builddir)/eg/fake_logit.c
__top_builddir__eg_fake_logit_OBJECTS = fake_logit.$(OBJEXT)
__top_builddir__eg_fake_logit_LDADD = $(LDADD)
__top_builddir__eg_fix_params_SOURCES =  \
	$(top_builddir)/eg/fix_params.c
__top_builddir__eg_fix_params_OBJECTS = fix_params.$(OBJEXT)
__top_builddir__eg_fix_params_LDADD = $(LDADD)
__top_builddir__eg_hills2_SOURCES = $(top_builddir)/eg/hills2.c
__top_builddir__eg_hills2_OBJECTS = hills2.$(OBJEXT)
__top_builddir__eg_hills2_LDADD = $(LDADD)
__top_builddir__eg_iv_SOURCES = $(top_builddir)/eg/iv.c
__top_builddir__eg_iv_OBJECTS = iv.$(OBJEXT)
__top_builddir__eg_iv_LDADD = $(LDADD)
__top_builddir__eg_jack_SOURCES = $(top_builddir)/eg/jack.c
__top_builddir__eg_jack_OBJECTS = jack.$(OBJEXT)
__top_builddir__eg_jack_LDADD = $(LDADD)
__top_builddir__eg_jacobian_SOURCES = $(top_builddir)/eg/jacobian.c
__top_builddir__eg_jacobian_OBJECTS = jacobian.$(OBJEXT)
__top_builddir__eg_jacobian_LDADD = $(LDADD)
__top_builddir__eg_ks_tests_SOURCES = $(top_builddir)/eg/ks_tests.c
__top_builddir__eg_ks_tests_OBJECTS = ks_tests.$(OBJEXT)
__top_builddir__eg_ks_tests_LDADD = $(LDADD)
__top_builddir__eg_logit_SOURCES = $(top_builddir)/eg/logit.c
__top_builddir__eg_logit_OBJECTS = logit.$(OBJEXT)
__top_builddir__eg_logit_LDADD = $(LDADD)
__top_builddir__eg_ml_imputation_SOURCES =  \
	$(top_builddir)/eg/ml_imputation.c
__top_builddir__eg_ml_imputation_OBJECTS = ml_imputation.$(OBJEXT)
__top_builddir__eg_ml_imputation_LDADD = $(LDADD)
__top_builddir__eg_normalization_demo_SOURCES =  \
	$(top_builddir)/eg/normalization_demo.c
__top_builddir__eg_normalization_demo_OBJECTS =  \
	normalization_demo.$(OBJEXT)
__top_builddir__eg_normalization_demo_LDADD = $(LDADD)
__top_builddir__eg_ols_SOURCES = $(top_builddir)/eg/ols.c
__top_builddir__eg_ols_OBJECTS = ols.$(OBJEXT)
__top_builddir__eg_ols_LDADD = $(LDADD)
__top_builddir__eg_ols_oneliner_SOURCES =  \
	$(top_builddir)/eg/ols_oneliner.c
__top_builddir__eg_ols_oneliner_OBJECTS = ols_oneliner.$(OBJEXT)
__top_builddir__eg_ols_oneliner_LDADD = $(LDADD)
__top_builddir__eg_parameterization_SOURCES =  \
	$(top_builddir)/eg/parameterization.c
__top_builddir__eg_parameterization_OBJECTS =  \
	parameterization.$(OBJEXT)
__top_builddir__eg_parameterization_LDADD = $(LDADD)
__top_builddir__eg_pmf_test_SOURCES = $(top_builddir)/eg/pmf_test.c
__top_builddir__eg_pmf_test_OBJECTS = pmf_test.$(OBJEXT)
__top_builddir__eg_pmf_test_LDADD = $(LDADD)
__top_builddir__eg_simple_subsets_SOURCES =  \
	$(top_builddir)/eg/simple_subsets.c
__top_builddir__eg_simple_subsets_OBJECTS = simple_subsets.$(OBJEXT)
__top_builddir__eg_simple_subsets_LDADD = $(LDADD)
__top_builddir__eg_some_cdfs_SOURCES = $(top_builddir)/eg/some_cdfs.c
__top_builddir__eg_some_cdfs_OBJECTS = some_cdfs.$(OBJEXT)
__top_builddir__eg_some_cdfs_LDADD = $(LDADD)
__top_builddir__eg_t_test_by_rows_SOURCES =  \
	$(top_builddir)/eg/t_test_by_rows.c
__top_builddir__eg_t_test_by_rows_OBJECTS = t_test_by_rows.$(OBJEXT)
__top_builddir__eg_t_test_by_rows_LDADD = $(LDADD)
__top_builddir__eg_test_distances_SOURCES =  \
	$(top_builddir)/eg/test_distances.c
__top_builddir__eg_test_distances_OBJECTS = test_distances.$(OBJEXT)
__top_builddir__eg_test_distances_LDADD = $(LDADD)
__top_builddir__eg_test_fisher_SOURCES =  \
	$(top_builddir)/eg/test_fisher.c
__top_builddir__eg_test_fisher_OBJECTS = test_fisher.$(OBJEXT)
__top_builddir__eg_test_fisher_LDADD = $(LDADD)
__top_builddir__eg_test_harmonic_SOURCES =  \
	$(top_builddir)/eg/test_harmonic.c
__top_builddir__eg_test_harmonic_OBJECTS = test_harmonic.$(OBJEXT)
__top_builddir__eg_test_harmonic_LDADD = $(LDADD)
__top_builddir__eg_test_kl_divergence_SOURCES =  \
	$(top_builddir)/eg/test_kl_divergence.c
__top_builddir__eg_test_kl_divergence_OBJECTS =  \
	test_kl_divergence.$(OBJEXT)
__top_builddir__eg_test_kl_divergence_LDADD = $(LDADD)
__top_builddir__eg_test_pruning_SOURCES =  \
	$(top_builddir)/eg/test_pruning.c
__top_builddir__eg_test_pruning_OBJECTS = test_pruning.$(OBJEXT)
__top_builddir__eg_test_pruning_LDADD = $(LDADD)
__top_builddir__eg_test_ranks_SOURCES =  \
	$(top_builddir)/eg/test_ranks.c
__top_builddir__eg_test_ranks_OBJECTS = test_ranks.$(OBJEXT)
__top_builddir__eg_test_ranks_LDADD = $(LDADD)
__top_builddir__eg_test_regex_SOURCES =  \
	$(top_builddir)/eg/test_regex.c
__top_builddir__eg_test_regex_OBJECTS = test_regex.$(OBJEXT)
__top_builddir__eg_test_regex_LDADD = $(LDADD)
__top_builddir__eg_test_updating_SOURCES =  \
	$(top_builddir)/eg/test_updating.c
__top_builddir__eg_test_updating_OBJECTS = test_updating.$(OBJEXT)
__top_builddir__eg_test_updating_LDADD = $(LDADD)
__top_builddir__eg_transform_SOURCES = $(top_builddir)/eg/transform.c
__top_builddir__eg_transform_OBJECTS = transform.$(OBJEXT)
__top_builddir__eg_transform_LDADD = $(LDADD)
db_tests_SOURCES = db_tests.c
db_tests_OBJECTS = db_tests.$(OBJEXT)
db_tests_LDADD = $(LDADD)
distribution_tests_SOURCES = distribution_tests.c
distribution_tests_OBJECTS = distribution_tests.$(OBJEXT)
distribution_tests_LDADD = $(LDADD)
error_test_SOURCES = error_test.c
error_test_OBJECTS = error_test.$(OBJEXT)
error_test_LDADD = $(LDADD)
factors_SOURCES = factors.c
factors_OBJECTS = factors.$(OBJEXT)
factors_LDADD = $(LDADD)
lognormal_test_SOURCES = lognormal_test.c
lognormal_test_OBJECTS = lognormal_test.$(OBJEXT)
lognormal_test_LDADD = $(LDADD)
nist_tests_SOURCES = nist_tests.c
nist_tests_OBJECTS = nist_tests.$(OBJEXT)
nist_tests_LDADD = $(LDADD)
rake_test_SOURCES = rake_test.c
rake_test_OBJECTS = rake_test.$(OBJEXT)
rake_test_LDADD = $(LDADD)
sort_example_SOURCES = sort_example.c
sort_example_OBJECTS = sort_example.$(OBJEXT)
sort_example_LDADD = $(LDADD)
test_apop_SOURCES = test_apop.c
test_apop_OBJECTS = test_apop.$(OBJEXT)
test_apop_LDADD = $(LDADD)
test_kernel_ll_SOURCES = test_kernel_ll.c
test_kernel_ll_OBJECTS = test_kernel_ll.$(OBJEXT)
test_kernel_ll_LDADD = $(LDADD)
update_via_rng_SOURCES = update_via_rng.c
update_via_rng_OBJECTS = update_via_rng.$(OBJEXT)
update_via_rng_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(top_builddir)/eg/apop_map_row.c \
	$(top_builddir)/eg/binning.c $(top_builddir)/eg/boot_clt.c \
	$(top_builddir)/eg/cross_models.c \
	$(top_builddir)/eg/data_fill.c $(top_builddir)/eg/db_fns.c \
	$(top_builddir)/eg/dconstrain.c \
	$(top_builddir)/eg/dot_products.c \
	$(top_builddir)/eg/draw_to_db.c \
	$(top_builddir)/eg/entropy_model.c \
	$(top_builddir)/eg/entropy_vector.c \
	$(top_builddir)/eg/f_test.c $(top_builddir)/eg/faithful.c \
	$(top_builddir)/eg/fake_logit.c \
	$(top_builddir)/eg/fix_params.c $(top_builddir)/eg/hills2.c \
	$(top_builddir)/eg/iv.c $(top_builddir)/eg/jack.c \
	$(top_builddir)/eg/jacobian.c $(top_builddir)/eg/ks_tests.c \
	$(top_builddir)/eg/logit.c $(top_builddir)/eg/ml_imputation.c \
	$(top_builddir)/eg/normalization_demo.c \
	$(top_builddir)/eg/ols.c $(top_builddir)/eg/ols_oneliner.c \
	$(top_builddir)/eg/parameterization.c \
	$(top_builddir)/eg/pmf_test.c \
	$(top_builddir)/eg/simple_subsets.c \
	$(top_builddir)/eg/some_cdfs.c \
	$(top_builddir)/eg/t_test_by_rows.c \
	$(top_builddir)/eg/test_distances.c \
	$(top_builddir)/eg/test_fisher.c \
	$(top_builddir)/eg/test_harmonic.c \
	$(top_builddir)/eg/test_kl_divergence.c \
	$(top_builddir)/eg/test_pruning.c \
	$(top_builddir)/eg/test_ranks.c \
	$(top_builddir)/eg/test_regex.c \
	$(top_builddir)/eg/test_updating.c \
	$(top_builddir)/eg/transform.c db_tests.c distribution_tests.c \
	error_test.c factors.c lognormal_test.c nist_tests.c \
	rake_test.c sort_example.c test_apop.c test_kernel_ll.c \
	update_via_rng.c
DIST_SOURCES = $(top_builddir)/eg/apop_map_row.c \
	$(top_builddir)/eg/binning.c $(top_builddir)/eg/boot_clt.c \
	$(top_builddir)/eg/cross_models.c \
	$(top_builddir)/eg/data_fill.c $(top_builddir)/eg/db_fns.c \
	$(top_builddir)/eg/dconstrain.c \
	$(top_builddir)/eg/dot_products.c \
	$(top_builddir)/eg/draw_to_db.c \
	$(top_builddir)/eg/entropy_model.c \
	$(top_builddir)/eg/entropy_vector.c \
	$(top_builddir)/eg/f_test.c $(top_builddir)/eg/faithful.c \
	$(top_builddir)/eg/fake_logit.c \
	$(top_builddir)/eg/fix_params.c $(top_builddir)/eg/hills2.c \
	$(top_builddir)/eg/iv.c $(top_builddir)/eg/jack.c \
	$(top_builddir)/eg/jacobian.c $(top_builddir)/eg/ks_tests.c \
	$(top_builddir)/eg/logit.c $(top_builddir)/eg/ml_imputation.c \
	$(top_builddir)/eg/normalization_demo.c \
	$(top_builddir)/eg/ols.c $(top_builddir)/eg/ols_oneliner.c \
	$(top_builddir)/eg/parameterization.c \
	$(top_builddir)/eg/pmf_test.c \
	$(top_builddir)/eg/simple_subsets.c \
	$(top_builddir)/eg/some_cdfs.c \
	$(top_builddir)/eg/t_test_by_rows.c \
	$(top_builddir)/eg/test_distances.c \
	$(top_builddir)/eg/test_fisher.c \
	$(top_builddir)/eg/test_harmonic.c \
	$(top_builddir)/eg/test_kl_divergence.c \
	$(top_builddir)/eg/test_pruning.c \
	$(top_builddir)/eg/test_ranks.c \
	$(top_builddir)/eg/test_regex.c \
	$(top_builddir)/eg/test_updating.c \
	$(top_builddir)/eg/transform.c db_tests.c distribution_tests.c \
	error_test.c factors.c lognormal_test.c nist_tests.c \
	rake_test.c sort_example.c test_apop.c test_kernel_ll.c \
	update_via_rng.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/utilities_test.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /xchip/gistic/Jeremiah/GIT/apophenia-clone/build-aux/missing aclocal-1.15
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /xchip/gistic/Jeremiah/GIT/apophenia-clone/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /xchip/gistic/Jeremiah/GIT/apophenia-clone/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /xchip/gistic/Jeremiah/GIT/apophenia-clone/build-aux/missing automake-1.15
AWK = gawk
Autoconf_no_atomics = 1
BC = /usr/bin/bc
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -fopenmp
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /broad/software/free/Linux/redhat_6_x86_64/pkgs/gcc_5.2.0/bin/ld -m elf_x86_64
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = ${SHELL} /xchip/gistic/Jeremiah/GIT/apophenia-clone/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MYSQL_CFLAGS = 
MYSQL_CONFIG = no
MYSQL_LDFLAGS = 
MYSQL_VERSION = 
NM = /broad/software/free/Linux/redhat_6_x86_64/pkgs/gcc_5.2.0/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENMP_CFLAGS = -fopenmp
OTOOL = 
OTOOL64 = 
PACKAGE = apophenia
PACKAGE_BUGREPORT = fluffmail@f-m.fm
PACKAGE_NAME = apophenia
PACKAGE_STRING = apophenia 1.0
PACKAGE_TARNAME = apophenia
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
POW_LIB = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SQLITE3 = /broad/software/free/Linux/redhat_6_x86_64/pkgs/sqlite_3.6.19/bin/sqlite3
SQLITE3_CFLAGS = -I/usr/include
SQLITE3_LDFLAGS = -L/usr/lib -lsqlite3
SQLITE3_VERSION = 3.6.20
STRIP = strip
VERSION = 1.0
abs_builddir = /xchip/gistic/Jeremiah/GIT/apophenia-clone/tests
abs_srcdir = /xchip/gistic/Jeremiah/GIT/apophenia-clone/tests
abs_top_builddir = /xchip/gistic/Jeremiah/GIT/apophenia-clone
abs_top_srcdir = /xchip/gistic/Jeremiah/GIT/apophenia-clone
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /xchip/gistic/Jeremiah/GIT/apophenia-clone/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /xchip/gistic/Jeremiah/GIT/apophenia-clone
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
#EXTRA_TESTS = distribution_tests \
#	lognormal_test \
#	rake_test \
#	test_kernel_ll \
#	update_via_rng \
#	$(top_builddir)/eg/cross_models \
#	$(top_builddir)/eg/dconstrain \
#	$(top_builddir)/eg/entropy_model \
#	$(top_builddir)/eg/faithful \
#	$(top_builddir)/eg/f_test \
#	$(top_builddir)/eg/fix_params \
#	$(top_builddir)/eg/hills2 \
#	$(top_builddir)/eg/jack \
#	$(top_builddir)/eg/jacobian \
#	$(top_builddir)/eg/ml_imputation \
#	$(top_builddir)/eg/pmf_test \
#	$(top_builddir)/eg/some_cdfs \
#	$(top_builddir)/eg/test_kl_divergence \
#	$(top_builddir)/eg/test_ranks \
#	$(top_builddir)/eg/test_updating \
#	$(top_builddir)/eg/transform

TESTS = \
	utilities_test \
	$(check_PROGRAMS)

AM_CFLAGS = \
	-DTesting \
	-DDatadir=\"$(top_srcdir)/tests/\" \
	-I$(top_srcdir)/tests \
	-I$(top_srcdir) \
	$(GSL_CFLAGS)

AM_LDFLAGS = \
	$(top_builddir)/libapophenia.la \
	$(GSL_LIBS)

DATA_DIST = \
	data \
	data-mixed \
	printing_sample \
	test_data \
	test_data2 \
	test_data_nans\
	test_data_fixed_width \
	amash_vote_analysis.csv \
	numacc4.dat \
	pontius.dat \
	wampler1.dat \
	faith.data \
	sort_tests.c

EXTRA_DIST = \
	Readme \
	$(DATA_DIST)

CLEANFILES = \
	ff.db \
	runs.db \
	td.db \
	draws-k \
	draws-k2 \
	draws-mvN \
	draws-N \
	draws-std_multinormal \
	draws-std_normal \
	the_data.txt \
	print_test.out \
	xxx

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
utilities_test: $(top_builddir)/config.status $(srcdir)/utilities_test.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
$(top_builddir)/eg/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/eg
	@: > $(top_builddir)/eg/$(am__dirstamp)

$(top_builddir)/eg/apop_map_row$(EXEEXT): $(__top_builddir__eg_apop_map_row_OBJECTS) $(__top_builddir__eg_apop_map_row_DEPENDENCIES) $(EXTRA___top_builddir__eg_apop_map_row_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/apop_map_row$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_apop_map_row_OBJECTS) $(__top_builddir__eg_apop_map_row_LDADD) $(LIBS)

$(top_builddir)/eg/binning$(EXEEXT): $(__top_builddir__eg_binning_OBJECTS) $(__top_builddir__eg_binning_DEPENDENCIES) $(EXTRA___top_builddir__eg_binning_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/binning$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_binning_OBJECTS) $(__top_builddir__eg_binning_LDADD) $(LIBS)

$(top_builddir)/eg/boot_clt$(EXEEXT): $(__top_builddir__eg_boot_clt_OBJECTS) $(__top_builddir__eg_boot_clt_DEPENDENCIES) $(EXTRA___top_builddir__eg_boot_clt_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/boot_clt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_boot_clt_OBJECTS) $(__top_builddir__eg_boot_clt_LDADD) $(LIBS)

$(top_builddir)/eg/cross_models$(EXEEXT): $(__top_builddir__eg_cross_models_OBJECTS) $(__top_builddir__eg_cross_models_DEPENDENCIES) $(EXTRA___top_builddir__eg_cross_models_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/cross_models$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_cross_models_OBJECTS) $(__top_builddir__eg_cross_models_LDADD) $(LIBS)

$(top_builddir)/eg/data_fill$(EXEEXT): $(__top_builddir__eg_data_fill_OBJECTS) $(__top_builddir__eg_data_fill_DEPENDENCIES) $(EXTRA___top_builddir__eg_data_fill_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/data_fill$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_data_fill_OBJECTS) $(__top_builddir__eg_data_fill_LDADD) $(LIBS)

$(top_builddir)/eg/db_fns$(EXEEXT): $(__top_builddir__eg_db_fns_OBJECTS) $(__top_builddir__eg_db_fns_DEPENDENCIES) $(EXTRA___top_builddir__eg_db_fns_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/db_fns$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_db_fns_OBJECTS) $(__top_builddir__eg_db_fns_LDADD) $(LIBS)

$(top_builddir)/eg/dconstrain$(EXEEXT): $(__top_builddir__eg_dconstrain_OBJECTS) $(__top_builddir__eg_dconstrain_DEPENDENCIES) $(EXTRA___top_builddir__eg_dconstrain_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/dconstrain$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_dconstrain_OBJECTS) $(__top_builddir__eg_dconstrain_LDADD) $(LIBS)

$(top_builddir)/eg/dot_products$(EXEEXT): $(__top_builddir__eg_dot_products_OBJECTS) $(__top_builddir__eg_dot_products_DEPENDENCIES) $(EXTRA___top_builddir__eg_dot_products_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/dot_products$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_dot_products_OBJECTS) $(__top_builddir__eg_dot_products_LDADD) $(LIBS)

$(top_builddir)/eg/draw_to_db$(EXEEXT): $(__top_builddir__eg_draw_to_db_OBJECTS) $(__top_builddir__eg_draw_to_db_DEPENDENCIES) $(EXTRA___top_builddir__eg_draw_to_db_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/draw_to_db$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_draw_to_db_OBJECTS) $(__top_builddir__eg_draw_to_db_LDADD) $(LIBS)

$(top_builddir)/eg/entropy_model$(EXEEXT): $(__top_builddir__eg_entropy_model_OBJECTS) $(__top_builddir__eg_entropy_model_DEPENDENCIES) $(EXTRA___top_builddir__eg_entropy_model_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/entropy_model$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_entropy_model_OBJECTS) $(__top_builddir__eg_entropy_model_LDADD) $(LIBS)

$(top_builddir)/eg/entropy_vector$(EXEEXT): $(__top_builddir__eg_entropy_vector_OBJECTS) $(__top_builddir__eg_entropy_vector_DEPENDENCIES) $(EXTRA___top_builddir__eg_entropy_vector_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/entropy_vector$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_entropy_vector_OBJECTS) $(__top_builddir__eg_entropy_vector_LDADD) $(LIBS)

$(top_builddir)/eg/f_test$(EXEEXT): $(__top_builddir__eg_f_test_OBJECTS) $(__top_builddir__eg_f_test_DEPENDENCIES) $(EXTRA___top_builddir__eg_f_test_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/f_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_f_test_OBJECTS) $(__top_builddir__eg_f_test_LDADD) $(LIBS)

$(top_builddir)/eg/faithful$(EXEEXT): $(__top_builddir__eg_faithful_OBJECTS) $(__top_builddir__eg_faithful_DEPENDENCIES) $(EXTRA___top_builddir__eg_faithful_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/faithful$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_faithful_OBJECTS) $(__top_builddir__eg_faithful_LDADD) $(LIBS)

$(top_builddir)/eg/fake_logit$(EXEEXT): $(__top_builddir__eg_fake_logit_OBJECTS) $(__top_builddir__eg_fake_logit_DEPENDENCIES) $(EXTRA___top_builddir__eg_fake_logit_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/fake_logit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_fake_logit_OBJECTS) $(__top_builddir__eg_fake_logit_LDADD) $(LIBS)

$(top_builddir)/eg/fix_params$(EXEEXT): $(__top_builddir__eg_fix_params_OBJECTS) $(__top_builddir__eg_fix_params_DEPENDENCIES) $(EXTRA___top_builddir__eg_fix_params_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/fix_params$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_fix_params_OBJECTS) $(__top_builddir__eg_fix_params_LDADD) $(LIBS)

$(top_builddir)/eg/hills2$(EXEEXT): $(__top_builddir__eg_hills2_OBJECTS) $(__top_builddir__eg_hills2_DEPENDENCIES) $(EXTRA___top_builddir__eg_hills2_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/hills2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_hills2_OBJECTS) $(__top_builddir__eg_hills2_LDADD) $(LIBS)

$(top_builddir)/eg/iv$(EXEEXT): $(__top_builddir__eg_iv_OBJECTS) $(__top_builddir__eg_iv_DEPENDENCIES) $(EXTRA___top_builddir__eg_iv_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/iv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_iv_OBJECTS) $(__top_builddir__eg_iv_LDADD) $(LIBS)

$(top_builddir)/eg/jack$(EXEEXT): $(__top_builddir__eg_jack_OBJECTS) $(__top_builddir__eg_jack_DEPENDENCIES) $(EXTRA___top_builddir__eg_jack_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/jack$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_jack_OBJECTS) $(__top_builddir__eg_jack_LDADD) $(LIBS)

$(top_builddir)/eg/jacobian$(EXEEXT): $(__top_builddir__eg_jacobian_OBJECTS) $(__top_builddir__eg_jacobian_DEPENDENCIES) $(EXTRA___top_builddir__eg_jacobian_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/jacobian$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_jacobian_OBJECTS) $(__top_builddir__eg_jacobian_LDADD) $(LIBS)

$(top_builddir)/eg/ks_tests$(EXEEXT): $(__top_builddir__eg_ks_tests_OBJECTS) $(__top_builddir__eg_ks_tests_DEPENDENCIES) $(EXTRA___top_builddir__eg_ks_tests_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/ks_tests$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_ks_tests_OBJECTS) $(__top_builddir__eg_ks_tests_LDADD) $(LIBS)

$(top_builddir)/eg/logit$(EXEEXT): $(__top_builddir__eg_logit_OBJECTS) $(__top_builddir__eg_logit_DEPENDENCIES) $(EXTRA___top_builddir__eg_logit_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/logit$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_logit_OBJECTS) $(__top_builddir__eg_logit_LDADD) $(LIBS)

$(top_builddir)/eg/ml_imputation$(EXEEXT): $(__top_builddir__eg_ml_imputation_OBJECTS) $(__top_builddir__eg_ml_imputation_DEPENDENCIES) $(EXTRA___top_builddir__eg_ml_imputation_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/ml_imputation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_ml_imputation_OBJECTS) $(__top_builddir__eg_ml_imputation_LDADD) $(LIBS)

$(top_builddir)/eg/normalization_demo$(EXEEXT): $(__top_builddir__eg_normalization_demo_OBJECTS) $(__top_builddir__eg_normalization_demo_DEPENDENCIES) $(EXTRA___top_builddir__eg_normalization_demo_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/normalization_demo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_normalization_demo_OBJECTS) $(__top_builddir__eg_normalization_demo_LDADD) $(LIBS)

$(top_builddir)/eg/ols$(EXEEXT): $(__top_builddir__eg_ols_OBJECTS) $(__top_builddir__eg_ols_DEPENDENCIES) $(EXTRA___top_builddir__eg_ols_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/ols$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_ols_OBJECTS) $(__top_builddir__eg_ols_LDADD) $(LIBS)

$(top_builddir)/eg/ols_oneliner$(EXEEXT): $(__top_builddir__eg_ols_oneliner_OBJECTS) $(__top_builddir__eg_ols_oneliner_DEPENDENCIES) $(EXTRA___top_builddir__eg_ols_oneliner_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/ols_oneliner$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_ols_oneliner_OBJECTS) $(__top_builddir__eg_ols_oneliner_LDADD) $(LIBS)

$(top_builddir)/eg/parameterization$(EXEEXT): $(__top_builddir__eg_parameterization_OBJECTS) $(__top_builddir__eg_parameterization_DEPENDENCIES) $(EXTRA___top_builddir__eg_parameterization_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/parameterization$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_parameterization_OBJECTS) $(__top_builddir__eg_parameterization_LDADD) $(LIBS)

$(top_builddir)/eg/pmf_test$(EXEEXT): $(__top_builddir__eg_pmf_test_OBJECTS) $(__top_builddir__eg_pmf_test_DEPENDENCIES) $(EXTRA___top_builddir__eg_pmf_test_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/pmf_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_pmf_test_OBJECTS) $(__top_builddir__eg_pmf_test_LDADD) $(LIBS)

$(top_builddir)/eg/simple_subsets$(EXEEXT): $(__top_builddir__eg_simple_subsets_OBJECTS) $(__top_builddir__eg_simple_subsets_DEPENDENCIES) $(EXTRA___top_builddir__eg_simple_subsets_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/simple_subsets$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_simple_subsets_OBJECTS) $(__top_builddir__eg_simple_subsets_LDADD) $(LIBS)

$(top_builddir)/eg/some_cdfs$(EXEEXT): $(__top_builddir__eg_some_cdfs_OBJECTS) $(__top_builddir__eg_some_cdfs_DEPENDENCIES) $(EXTRA___top_builddir__eg_some_cdfs_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/some_cdfs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_some_cdfs_OBJECTS) $(__top_builddir__eg_some_cdfs_LDADD) $(LIBS)

$(top_builddir)/eg/t_test_by_rows$(EXEEXT): $(__top_builddir__eg_t_test_by_rows_OBJECTS) $(__top_builddir__eg_t_test_by_rows_DEPENDENCIES) $(EXTRA___top_builddir__eg_t_test_by_rows_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/t_test_by_rows$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_t_test_by_rows_OBJECTS) $(__top_builddir__eg_t_test_by_rows_LDADD) $(LIBS)

$(top_builddir)/eg/test_distances$(EXEEXT): $(__top_builddir__eg_test_distances_OBJECTS) $(__top_builddir__eg_test_distances_DEPENDENCIES) $(EXTRA___top_builddir__eg_test_distances_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/test_distances$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_test_distances_OBJECTS) $(__top_builddir__eg_test_distances_LDADD) $(LIBS)

$(top_builddir)/eg/test_fisher$(EXEEXT): $(__top_builddir__eg_test_fisher_OBJECTS) $(__top_builddir__eg_test_fisher_DEPENDENCIES) $(EXTRA___top_builddir__eg_test_fisher_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/test_fisher$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_test_fisher_OBJECTS) $(__top_builddir__eg_test_fisher_LDADD) $(LIBS)

$(top_builddir)/eg/test_harmonic$(EXEEXT): $(__top_builddir__eg_test_harmonic_OBJECTS) $(__top_builddir__eg_test_harmonic_DEPENDENCIES) $(EXTRA___top_builddir__eg_test_harmonic_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/test_harmonic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_test_harmonic_OBJECTS) $(__top_builddir__eg_test_harmonic_LDADD) $(LIBS)

$(top_builddir)/eg/test_kl_divergence$(EXEEXT): $(__top_builddir__eg_test_kl_divergence_OBJECTS) $(__top_builddir__eg_test_kl_divergence_DEPENDENCIES) $(EXTRA___top_builddir__eg_test_kl_divergence_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/test_kl_divergence$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_test_kl_divergence_OBJECTS) $(__top_builddir__eg_test_kl_divergence_LDADD) $(LIBS)

$(top_builddir)/eg/test_pruning$(EXEEXT): $(__top_builddir__eg_test_pruning_OBJECTS) $(__top_builddir__eg_test_pruning_DEPENDENCIES) $(EXTRA___top_builddir__eg_test_pruning_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/test_pruning$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_test_pruning_OBJECTS) $(__top_builddir__eg_test_pruning_LDADD) $(LIBS)

$(top_builddir)/eg/test_ranks$(EXEEXT): $(__top_builddir__eg_test_ranks_OBJECTS) $(__top_builddir__eg_test_ranks_DEPENDENCIES) $(EXTRA___top_builddir__eg_test_ranks_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/test_ranks$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_test_ranks_OBJECTS) $(__top_builddir__eg_test_ranks_LDADD) $(LIBS)

$(top_builddir)/eg/test_regex$(EXEEXT): $(__top_builddir__eg_test_regex_OBJECTS) $(__top_builddir__eg_test_regex_DEPENDENCIES) $(EXTRA___top_builddir__eg_test_regex_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/test_regex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_test_regex_OBJECTS) $(__top_builddir__eg_test_regex_LDADD) $(LIBS)

$(top_builddir)/eg/test_updating$(EXEEXT): $(__top_builddir__eg_test_updating_OBJECTS) $(__top_builddir__eg_test_updating_DEPENDENCIES) $(EXTRA___top_builddir__eg_test_updating_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/test_updating$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_test_updating_OBJECTS) $(__top_builddir__eg_test_updating_LDADD) $(LIBS)

$(top_builddir)/eg/transform$(EXEEXT): $(__top_builddir__eg_transform_OBJECTS) $(__top_builddir__eg_transform_DEPENDENCIES) $(EXTRA___top_builddir__eg_transform_DEPENDENCIES) $(top_builddir)/eg/$(am__dirstamp)
	@rm -f $(top_builddir)/eg/transform$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(__top_builddir__eg_transform_OBJECTS) $(__top_builddir__eg_transform_LDADD) $(LIBS)

db_tests$(EXEEXT): $(db_tests_OBJECTS) $(db_tests_DEPENDENCIES) $(EXTRA_db_tests_DEPENDENCIES) 
	@rm -f db_tests$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(db_tests_OBJECTS) $(db_tests_LDADD) $(LIBS)

distribution_tests$(EXEEXT): $(distribution_tests_OBJECTS) $(distribution_tests_DEPENDENCIES) $(EXTRA_distribution_tests_DEPENDENCIES) 
	@rm -f distribution_tests$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(distribution_tests_OBJECTS) $(distribution_tests_LDADD) $(LIBS)

error_test$(EXEEXT): $(error_test_OBJECTS) $(error_test_DEPENDENCIES) $(EXTRA_error_test_DEPENDENCIES) 
	@rm -f error_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(error_test_OBJECTS) $(error_test_LDADD) $(LIBS)

factors$(EXEEXT): $(factors_OBJECTS) $(factors_DEPENDENCIES) $(EXTRA_factors_DEPENDENCIES) 
	@rm -f factors$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(factors_OBJECTS) $(factors_LDADD) $(LIBS)

lognormal_test$(EXEEXT): $(lognormal_test_OBJECTS) $(lognormal_test_DEPENDENCIES) $(EXTRA_lognormal_test_DEPENDENCIES) 
	@rm -f lognormal_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lognormal_test_OBJECTS) $(lognormal_test_LDADD) $(LIBS)

nist_tests$(EXEEXT): $(nist_tests_OBJECTS) $(nist_tests_DEPENDENCIES) $(EXTRA_nist_tests_DEPENDENCIES) 
	@rm -f nist_tests$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nist_tests_OBJECTS) $(nist_tests_LDADD) $(LIBS)

rake_test$(EXEEXT): $(rake_test_OBJECTS) $(rake_test_DEPENDENCIES) $(EXTRA_rake_test_DEPENDENCIES) 
	@rm -f rake_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rake_test_OBJECTS) $(rake_test_LDADD) $(LIBS)

sort_example$(EXEEXT): $(sort_example_OBJECTS) $(sort_example_DEPENDENCIES) $(EXTRA_sort_example_DEPENDENCIES) 
	@rm -f sort_example$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sort_example_OBJECTS) $(sort_example_LDADD) $(LIBS)

test_apop$(EXEEXT): $(test_apop_OBJECTS) $(test_apop_DEPENDENCIES) $(EXTRA_test_apop_DEPENDENCIES) 
	@rm -f test_apop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_apop_OBJECTS) $(test_apop_LDADD) $(LIBS)

test_kernel_ll$(EXEEXT): $(test_kernel_ll_OBJECTS) $(test_kernel_ll_DEPENDENCIES) $(EXTRA_test_kernel_ll_DEPENDENCIES) 
	@rm -f test_kernel_ll$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_kernel_ll_OBJECTS) $(test_kernel_ll_LDADD) $(LIBS)

update_via_rng$(EXEEXT): $(update_via_rng_OBJECTS) $(update_via_rng_DEPENDENCIES) $(EXTRA_update_via_rng_DEPENDENCIES) 
	@rm -f update_via_rng$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(update_via_rng_OBJECTS) $(update_via_rng_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/apop_map_row.Po
include ./$(DEPDIR)/binning.Po
include ./$(DEPDIR)/boot_clt.Po
include ./$(DEPDIR)/cross_models.Po
include ./$(DEPDIR)/data_fill.Po
include ./$(DEPDIR)/db_fns.Po
include ./$(DEPDIR)/db_tests.Po
include ./$(DEPDIR)/dconstrain.Po
include ./$(DEPDIR)/distribution_tests.Po
include ./$(DEPDIR)/dot_products.Po
include ./$(DEPDIR)/draw_to_db.Po
include ./$(DEPDIR)/entropy_model.Po
include ./$(DEPDIR)/entropy_vector.Po
include ./$(DEPDIR)/error_test.Po
include ./$(DEPDIR)/f_test.Po
include ./$(DEPDIR)/factors.Po
include ./$(DEPDIR)/faithful.Po
include ./$(DEPDIR)/fake_logit.Po
include ./$(DEPDIR)/fix_params.Po
include ./$(DEPDIR)/hills2.Po
include ./$(DEPDIR)/iv.Po
include ./$(DEPDIR)/jack.Po
include ./$(DEPDIR)/jacobian.Po
include ./$(DEPDIR)/ks_tests.Po
include ./$(DEPDIR)/logit.Po
include ./$(DEPDIR)/lognormal_test.Po
include ./$(DEPDIR)/ml_imputation.Po
include ./$(DEPDIR)/nist_tests.Po
include ./$(DEPDIR)/normalization_demo.Po
include ./$(DEPDIR)/ols.Po
include ./$(DEPDIR)/ols_oneliner.Po
include ./$(DEPDIR)/parameterization.Po
include ./$(DEPDIR)/pmf_test.Po
include ./$(DEPDIR)/rake_test.Po
include ./$(DEPDIR)/simple_subsets.Po
include ./$(DEPDIR)/some_cdfs.Po
include ./$(DEPDIR)/sort_example.Po
include ./$(DEPDIR)/t_test_by_rows.Po
include ./$(DEPDIR)/test_apop.Po
include ./$(DEPDIR)/test_distances.Po
include ./$(DEPDIR)/test_fisher.Po
include ./$(DEPDIR)/test_harmonic.Po
include ./$(DEPDIR)/test_kernel_ll.Po
include ./$(DEPDIR)/test_kl_divergence.Po
include ./$(DEPDIR)/test_pruning.Po
include ./$(DEPDIR)/test_ranks.Po
include ./$(DEPDIR)/test_regex.Po
include ./$(DEPDIR)/test_updating.Po
include ./$(DEPDIR)/transform.Po
include ./$(DEPDIR)/update_via_rng.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

apop_map_row.o: $(top_builddir)/eg/apop_map_row.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT apop_map_row.o -MD -MP -MF $(DEPDIR)/apop_map_row.Tpo -c -o apop_map_row.o `test -f '$(top_builddir)/eg/apop_map_row.c' || echo '$(srcdir)/'`$(top_builddir)/eg/apop_map_row.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/apop_map_row.Tpo $(DEPDIR)/apop_map_row.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/apop_map_row.c' object='apop_map_row.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o apop_map_row.o `test -f '$(top_builddir)/eg/apop_map_row.c' || echo '$(srcdir)/'`$(top_builddir)/eg/apop_map_row.c

apop_map_row.obj: $(top_builddir)/eg/apop_map_row.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT apop_map_row.obj -MD -MP -MF $(DEPDIR)/apop_map_row.Tpo -c -o apop_map_row.obj `if test -f '$(top_builddir)/eg/apop_map_row.c'; then $(CYGPATH_W) '$(top_builddir)/eg/apop_map_row.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/apop_map_row.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/apop_map_row.Tpo $(DEPDIR)/apop_map_row.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/apop_map_row.c' object='apop_map_row.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o apop_map_row.obj `if test -f '$(top_builddir)/eg/apop_map_row.c'; then $(CYGPATH_W) '$(top_builddir)/eg/apop_map_row.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/apop_map_row.c'; fi`

binning.o: $(top_builddir)/eg/binning.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT binning.o -MD -MP -MF $(DEPDIR)/binning.Tpo -c -o binning.o `test -f '$(top_builddir)/eg/binning.c' || echo '$(srcdir)/'`$(top_builddir)/eg/binning.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/binning.Tpo $(DEPDIR)/binning.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/binning.c' object='binning.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o binning.o `test -f '$(top_builddir)/eg/binning.c' || echo '$(srcdir)/'`$(top_builddir)/eg/binning.c

binning.obj: $(top_builddir)/eg/binning.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT binning.obj -MD -MP -MF $(DEPDIR)/binning.Tpo -c -o binning.obj `if test -f '$(top_builddir)/eg/binning.c'; then $(CYGPATH_W) '$(top_builddir)/eg/binning.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/binning.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/binning.Tpo $(DEPDIR)/binning.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/binning.c' object='binning.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o binning.obj `if test -f '$(top_builddir)/eg/binning.c'; then $(CYGPATH_W) '$(top_builddir)/eg/binning.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/binning.c'; fi`

boot_clt.o: $(top_builddir)/eg/boot_clt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT boot_clt.o -MD -MP -MF $(DEPDIR)/boot_clt.Tpo -c -o boot_clt.o `test -f '$(top_builddir)/eg/boot_clt.c' || echo '$(srcdir)/'`$(top_builddir)/eg/boot_clt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/boot_clt.Tpo $(DEPDIR)/boot_clt.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/boot_clt.c' object='boot_clt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o boot_clt.o `test -f '$(top_builddir)/eg/boot_clt.c' || echo '$(srcdir)/'`$(top_builddir)/eg/boot_clt.c

boot_clt.obj: $(top_builddir)/eg/boot_clt.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT boot_clt.obj -MD -MP -MF $(DEPDIR)/boot_clt.Tpo -c -o boot_clt.obj `if test -f '$(top_builddir)/eg/boot_clt.c'; then $(CYGPATH_W) '$(top_builddir)/eg/boot_clt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/boot_clt.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/boot_clt.Tpo $(DEPDIR)/boot_clt.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/boot_clt.c' object='boot_clt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o boot_clt.obj `if test -f '$(top_builddir)/eg/boot_clt.c'; then $(CYGPATH_W) '$(top_builddir)/eg/boot_clt.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/boot_clt.c'; fi`

cross_models.o: $(top_builddir)/eg/cross_models.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cross_models.o -MD -MP -MF $(DEPDIR)/cross_models.Tpo -c -o cross_models.o `test -f '$(top_builddir)/eg/cross_models.c' || echo '$(srcdir)/'`$(top_builddir)/eg/cross_models.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cross_models.Tpo $(DEPDIR)/cross_models.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/cross_models.c' object='cross_models.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cross_models.o `test -f '$(top_builddir)/eg/cross_models.c' || echo '$(srcdir)/'`$(top_builddir)/eg/cross_models.c

cross_models.obj: $(top_builddir)/eg/cross_models.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cross_models.obj -MD -MP -MF $(DEPDIR)/cross_models.Tpo -c -o cross_models.obj `if test -f '$(top_builddir)/eg/cross_models.c'; then $(CYGPATH_W) '$(top_builddir)/eg/cross_models.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/cross_models.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cross_models.Tpo $(DEPDIR)/cross_models.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/cross_models.c' object='cross_models.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cross_models.obj `if test -f '$(top_builddir)/eg/cross_models.c'; then $(CYGPATH_W) '$(top_builddir)/eg/cross_models.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/cross_models.c'; fi`

data_fill.o: $(top_builddir)/eg/data_fill.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_fill.o -MD -MP -MF $(DEPDIR)/data_fill.Tpo -c -o data_fill.o `test -f '$(top_builddir)/eg/data_fill.c' || echo '$(srcdir)/'`$(top_builddir)/eg/data_fill.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_fill.Tpo $(DEPDIR)/data_fill.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/data_fill.c' object='data_fill.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_fill.o `test -f '$(top_builddir)/eg/data_fill.c' || echo '$(srcdir)/'`$(top_builddir)/eg/data_fill.c

data_fill.obj: $(top_builddir)/eg/data_fill.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT data_fill.obj -MD -MP -MF $(DEPDIR)/data_fill.Tpo -c -o data_fill.obj `if test -f '$(top_builddir)/eg/data_fill.c'; then $(CYGPATH_W) '$(top_builddir)/eg/data_fill.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/data_fill.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/data_fill.Tpo $(DEPDIR)/data_fill.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/data_fill.c' object='data_fill.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o data_fill.obj `if test -f '$(top_builddir)/eg/data_fill.c'; then $(CYGPATH_W) '$(top_builddir)/eg/data_fill.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/data_fill.c'; fi`

db_fns.o: $(top_builddir)/eg/db_fns.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT db_fns.o -MD -MP -MF $(DEPDIR)/db_fns.Tpo -c -o db_fns.o `test -f '$(top_builddir)/eg/db_fns.c' || echo '$(srcdir)/'`$(top_builddir)/eg/db_fns.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/db_fns.Tpo $(DEPDIR)/db_fns.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/db_fns.c' object='db_fns.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o db_fns.o `test -f '$(top_builddir)/eg/db_fns.c' || echo '$(srcdir)/'`$(top_builddir)/eg/db_fns.c

db_fns.obj: $(top_builddir)/eg/db_fns.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT db_fns.obj -MD -MP -MF $(DEPDIR)/db_fns.Tpo -c -o db_fns.obj `if test -f '$(top_builddir)/eg/db_fns.c'; then $(CYGPATH_W) '$(top_builddir)/eg/db_fns.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/db_fns.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/db_fns.Tpo $(DEPDIR)/db_fns.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/db_fns.c' object='db_fns.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o db_fns.obj `if test -f '$(top_builddir)/eg/db_fns.c'; then $(CYGPATH_W) '$(top_builddir)/eg/db_fns.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/db_fns.c'; fi`

dconstrain.o: $(top_builddir)/eg/dconstrain.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dconstrain.o -MD -MP -MF $(DEPDIR)/dconstrain.Tpo -c -o dconstrain.o `test -f '$(top_builddir)/eg/dconstrain.c' || echo '$(srcdir)/'`$(top_builddir)/eg/dconstrain.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dconstrain.Tpo $(DEPDIR)/dconstrain.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/dconstrain.c' object='dconstrain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dconstrain.o `test -f '$(top_builddir)/eg/dconstrain.c' || echo '$(srcdir)/'`$(top_builddir)/eg/dconstrain.c

dconstrain.obj: $(top_builddir)/eg/dconstrain.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dconstrain.obj -MD -MP -MF $(DEPDIR)/dconstrain.Tpo -c -o dconstrain.obj `if test -f '$(top_builddir)/eg/dconstrain.c'; then $(CYGPATH_W) '$(top_builddir)/eg/dconstrain.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/dconstrain.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dconstrain.Tpo $(DEPDIR)/dconstrain.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/dconstrain.c' object='dconstrain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dconstrain.obj `if test -f '$(top_builddir)/eg/dconstrain.c'; then $(CYGPATH_W) '$(top_builddir)/eg/dconstrain.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/dconstrain.c'; fi`

dot_products.o: $(top_builddir)/eg/dot_products.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dot_products.o -MD -MP -MF $(DEPDIR)/dot_products.Tpo -c -o dot_products.o `test -f '$(top_builddir)/eg/dot_products.c' || echo '$(srcdir)/'`$(top_builddir)/eg/dot_products.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dot_products.Tpo $(DEPDIR)/dot_products.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/dot_products.c' object='dot_products.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dot_products.o `test -f '$(top_builddir)/eg/dot_products.c' || echo '$(srcdir)/'`$(top_builddir)/eg/dot_products.c

dot_products.obj: $(top_builddir)/eg/dot_products.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dot_products.obj -MD -MP -MF $(DEPDIR)/dot_products.Tpo -c -o dot_products.obj `if test -f '$(top_builddir)/eg/dot_products.c'; then $(CYGPATH_W) '$(top_builddir)/eg/dot_products.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/dot_products.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dot_products.Tpo $(DEPDIR)/dot_products.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/dot_products.c' object='dot_products.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dot_products.obj `if test -f '$(top_builddir)/eg/dot_products.c'; then $(CYGPATH_W) '$(top_builddir)/eg/dot_products.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/dot_products.c'; fi`

draw_to_db.o: $(top_builddir)/eg/draw_to_db.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT draw_to_db.o -MD -MP -MF $(DEPDIR)/draw_to_db.Tpo -c -o draw_to_db.o `test -f '$(top_builddir)/eg/draw_to_db.c' || echo '$(srcdir)/'`$(top_builddir)/eg/draw_to_db.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/draw_to_db.Tpo $(DEPDIR)/draw_to_db.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/draw_to_db.c' object='draw_to_db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o draw_to_db.o `test -f '$(top_builddir)/eg/draw_to_db.c' || echo '$(srcdir)/'`$(top_builddir)/eg/draw_to_db.c

draw_to_db.obj: $(top_builddir)/eg/draw_to_db.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT draw_to_db.obj -MD -MP -MF $(DEPDIR)/draw_to_db.Tpo -c -o draw_to_db.obj `if test -f '$(top_builddir)/eg/draw_to_db.c'; then $(CYGPATH_W) '$(top_builddir)/eg/draw_to_db.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/draw_to_db.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/draw_to_db.Tpo $(DEPDIR)/draw_to_db.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/draw_to_db.c' object='draw_to_db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o draw_to_db.obj `if test -f '$(top_builddir)/eg/draw_to_db.c'; then $(CYGPATH_W) '$(top_builddir)/eg/draw_to_db.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/draw_to_db.c'; fi`

entropy_model.o: $(top_builddir)/eg/entropy_model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT entropy_model.o -MD -MP -MF $(DEPDIR)/entropy_model.Tpo -c -o entropy_model.o `test -f '$(top_builddir)/eg/entropy_model.c' || echo '$(srcdir)/'`$(top_builddir)/eg/entropy_model.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/entropy_model.Tpo $(DEPDIR)/entropy_model.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/entropy_model.c' object='entropy_model.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o entropy_model.o `test -f '$(top_builddir)/eg/entropy_model.c' || echo '$(srcdir)/'`$(top_builddir)/eg/entropy_model.c

entropy_model.obj: $(top_builddir)/eg/entropy_model.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT entropy_model.obj -MD -MP -MF $(DEPDIR)/entropy_model.Tpo -c -o entropy_model.obj `if test -f '$(top_builddir)/eg/entropy_model.c'; then $(CYGPATH_W) '$(top_builddir)/eg/entropy_model.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/entropy_model.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/entropy_model.Tpo $(DEPDIR)/entropy_model.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/entropy_model.c' object='entropy_model.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o entropy_model.obj `if test -f '$(top_builddir)/eg/entropy_model.c'; then $(CYGPATH_W) '$(top_builddir)/eg/entropy_model.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/entropy_model.c'; fi`

entropy_vector.o: $(top_builddir)/eg/entropy_vector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT entropy_vector.o -MD -MP -MF $(DEPDIR)/entropy_vector.Tpo -c -o entropy_vector.o `test -f '$(top_builddir)/eg/entropy_vector.c' || echo '$(srcdir)/'`$(top_builddir)/eg/entropy_vector.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/entropy_vector.Tpo $(DEPDIR)/entropy_vector.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/entropy_vector.c' object='entropy_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o entropy_vector.o `test -f '$(top_builddir)/eg/entropy_vector.c' || echo '$(srcdir)/'`$(top_builddir)/eg/entropy_vector.c

entropy_vector.obj: $(top_builddir)/eg/entropy_vector.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT entropy_vector.obj -MD -MP -MF $(DEPDIR)/entropy_vector.Tpo -c -o entropy_vector.obj `if test -f '$(top_builddir)/eg/entropy_vector.c'; then $(CYGPATH_W) '$(top_builddir)/eg/entropy_vector.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/entropy_vector.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/entropy_vector.Tpo $(DEPDIR)/entropy_vector.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/entropy_vector.c' object='entropy_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o entropy_vector.obj `if test -f '$(top_builddir)/eg/entropy_vector.c'; then $(CYGPATH_W) '$(top_builddir)/eg/entropy_vector.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/entropy_vector.c'; fi`

f_test.o: $(top_builddir)/eg/f_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT f_test.o -MD -MP -MF $(DEPDIR)/f_test.Tpo -c -o f_test.o `test -f '$(top_builddir)/eg/f_test.c' || echo '$(srcdir)/'`$(top_builddir)/eg/f_test.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/f_test.Tpo $(DEPDIR)/f_test.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/f_test.c' object='f_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o f_test.o `test -f '$(top_builddir)/eg/f_test.c' || echo '$(srcdir)/'`$(top_builddir)/eg/f_test.c

f_test.obj: $(top_builddir)/eg/f_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT f_test.obj -MD -MP -MF $(DEPDIR)/f_test.Tpo -c -o f_test.obj `if test -f '$(top_builddir)/eg/f_test.c'; then $(CYGPATH_W) '$(top_builddir)/eg/f_test.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/f_test.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/f_test.Tpo $(DEPDIR)/f_test.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/f_test.c' object='f_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o f_test.obj `if test -f '$(top_builddir)/eg/f_test.c'; then $(CYGPATH_W) '$(top_builddir)/eg/f_test.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/f_test.c'; fi`

faithful.o: $(top_builddir)/eg/faithful.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT faithful.o -MD -MP -MF $(DEPDIR)/faithful.Tpo -c -o faithful.o `test -f '$(top_builddir)/eg/faithful.c' || echo '$(srcdir)/'`$(top_builddir)/eg/faithful.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/faithful.Tpo $(DEPDIR)/faithful.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/faithful.c' object='faithful.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o faithful.o `test -f '$(top_builddir)/eg/faithful.c' || echo '$(srcdir)/'`$(top_builddir)/eg/faithful.c

faithful.obj: $(top_builddir)/eg/faithful.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT faithful.obj -MD -MP -MF $(DEPDIR)/faithful.Tpo -c -o faithful.obj `if test -f '$(top_builddir)/eg/faithful.c'; then $(CYGPATH_W) '$(top_builddir)/eg/faithful.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/faithful.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/faithful.Tpo $(DEPDIR)/faithful.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/faithful.c' object='faithful.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o faithful.obj `if test -f '$(top_builddir)/eg/faithful.c'; then $(CYGPATH_W) '$(top_builddir)/eg/faithful.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/faithful.c'; fi`

fake_logit.o: $(top_builddir)/eg/fake_logit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fake_logit.o -MD -MP -MF $(DEPDIR)/fake_logit.Tpo -c -o fake_logit.o `test -f '$(top_builddir)/eg/fake_logit.c' || echo '$(srcdir)/'`$(top_builddir)/eg/fake_logit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fake_logit.Tpo $(DEPDIR)/fake_logit.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/fake_logit.c' object='fake_logit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fake_logit.o `test -f '$(top_builddir)/eg/fake_logit.c' || echo '$(srcdir)/'`$(top_builddir)/eg/fake_logit.c

fake_logit.obj: $(top_builddir)/eg/fake_logit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fake_logit.obj -MD -MP -MF $(DEPDIR)/fake_logit.Tpo -c -o fake_logit.obj `if test -f '$(top_builddir)/eg/fake_logit.c'; then $(CYGPATH_W) '$(top_builddir)/eg/fake_logit.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/fake_logit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fake_logit.Tpo $(DEPDIR)/fake_logit.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/fake_logit.c' object='fake_logit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fake_logit.obj `if test -f '$(top_builddir)/eg/fake_logit.c'; then $(CYGPATH_W) '$(top_builddir)/eg/fake_logit.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/fake_logit.c'; fi`

fix_params.o: $(top_builddir)/eg/fix_params.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fix_params.o -MD -MP -MF $(DEPDIR)/fix_params.Tpo -c -o fix_params.o `test -f '$(top_builddir)/eg/fix_params.c' || echo '$(srcdir)/'`$(top_builddir)/eg/fix_params.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fix_params.Tpo $(DEPDIR)/fix_params.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/fix_params.c' object='fix_params.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fix_params.o `test -f '$(top_builddir)/eg/fix_params.c' || echo '$(srcdir)/'`$(top_builddir)/eg/fix_params.c

fix_params.obj: $(top_builddir)/eg/fix_params.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fix_params.obj -MD -MP -MF $(DEPDIR)/fix_params.Tpo -c -o fix_params.obj `if test -f '$(top_builddir)/eg/fix_params.c'; then $(CYGPATH_W) '$(top_builddir)/eg/fix_params.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/fix_params.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fix_params.Tpo $(DEPDIR)/fix_params.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/fix_params.c' object='fix_params.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fix_params.obj `if test -f '$(top_builddir)/eg/fix_params.c'; then $(CYGPATH_W) '$(top_builddir)/eg/fix_params.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/fix_params.c'; fi`

hills2.o: $(top_builddir)/eg/hills2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hills2.o -MD -MP -MF $(DEPDIR)/hills2.Tpo -c -o hills2.o `test -f '$(top_builddir)/eg/hills2.c' || echo '$(srcdir)/'`$(top_builddir)/eg/hills2.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/hills2.Tpo $(DEPDIR)/hills2.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/hills2.c' object='hills2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hills2.o `test -f '$(top_builddir)/eg/hills2.c' || echo '$(srcdir)/'`$(top_builddir)/eg/hills2.c

hills2.obj: $(top_builddir)/eg/hills2.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT hills2.obj -MD -MP -MF $(DEPDIR)/hills2.Tpo -c -o hills2.obj `if test -f '$(top_builddir)/eg/hills2.c'; then $(CYGPATH_W) '$(top_builddir)/eg/hills2.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/hills2.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hills2.Tpo $(DEPDIR)/hills2.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/hills2.c' object='hills2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hills2.obj `if test -f '$(top_builddir)/eg/hills2.c'; then $(CYGPATH_W) '$(top_builddir)/eg/hills2.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/hills2.c'; fi`

iv.o: $(top_builddir)/eg/iv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iv.o -MD -MP -MF $(DEPDIR)/iv.Tpo -c -o iv.o `test -f '$(top_builddir)/eg/iv.c' || echo '$(srcdir)/'`$(top_builddir)/eg/iv.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iv.Tpo $(DEPDIR)/iv.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/iv.c' object='iv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iv.o `test -f '$(top_builddir)/eg/iv.c' || echo '$(srcdir)/'`$(top_builddir)/eg/iv.c

iv.obj: $(top_builddir)/eg/iv.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iv.obj -MD -MP -MF $(DEPDIR)/iv.Tpo -c -o iv.obj `if test -f '$(top_builddir)/eg/iv.c'; then $(CYGPATH_W) '$(top_builddir)/eg/iv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/iv.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iv.Tpo $(DEPDIR)/iv.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/iv.c' object='iv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iv.obj `if test -f '$(top_builddir)/eg/iv.c'; then $(CYGPATH_W) '$(top_builddir)/eg/iv.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/iv.c'; fi`

jack.o: $(top_builddir)/eg/jack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jack.o -MD -MP -MF $(DEPDIR)/jack.Tpo -c -o jack.o `test -f '$(top_builddir)/eg/jack.c' || echo '$(srcdir)/'`$(top_builddir)/eg/jack.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/jack.Tpo $(DEPDIR)/jack.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/jack.c' object='jack.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jack.o `test -f '$(top_builddir)/eg/jack.c' || echo '$(srcdir)/'`$(top_builddir)/eg/jack.c

jack.obj: $(top_builddir)/eg/jack.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jack.obj -MD -MP -MF $(DEPDIR)/jack.Tpo -c -o jack.obj `if test -f '$(top_builddir)/eg/jack.c'; then $(CYGPATH_W) '$(top_builddir)/eg/jack.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/jack.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/jack.Tpo $(DEPDIR)/jack.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/jack.c' object='jack.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jack.obj `if test -f '$(top_builddir)/eg/jack.c'; then $(CYGPATH_W) '$(top_builddir)/eg/jack.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/jack.c'; fi`

jacobian.o: $(top_builddir)/eg/jacobian.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jacobian.o -MD -MP -MF $(DEPDIR)/jacobian.Tpo -c -o jacobian.o `test -f '$(top_builddir)/eg/jacobian.c' || echo '$(srcdir)/'`$(top_builddir)/eg/jacobian.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/jacobian.Tpo $(DEPDIR)/jacobian.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/jacobian.c' object='jacobian.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jacobian.o `test -f '$(top_builddir)/eg/jacobian.c' || echo '$(srcdir)/'`$(top_builddir)/eg/jacobian.c

jacobian.obj: $(top_builddir)/eg/jacobian.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT jacobian.obj -MD -MP -MF $(DEPDIR)/jacobian.Tpo -c -o jacobian.obj `if test -f '$(top_builddir)/eg/jacobian.c'; then $(CYGPATH_W) '$(top_builddir)/eg/jacobian.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/jacobian.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/jacobian.Tpo $(DEPDIR)/jacobian.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/jacobian.c' object='jacobian.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o jacobian.obj `if test -f '$(top_builddir)/eg/jacobian.c'; then $(CYGPATH_W) '$(top_builddir)/eg/jacobian.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/jacobian.c'; fi`

ks_tests.o: $(top_builddir)/eg/ks_tests.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ks_tests.o -MD -MP -MF $(DEPDIR)/ks_tests.Tpo -c -o ks_tests.o `test -f '$(top_builddir)/eg/ks_tests.c' || echo '$(srcdir)/'`$(top_builddir)/eg/ks_tests.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ks_tests.Tpo $(DEPDIR)/ks_tests.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/ks_tests.c' object='ks_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ks_tests.o `test -f '$(top_builddir)/eg/ks_tests.c' || echo '$(srcdir)/'`$(top_builddir)/eg/ks_tests.c

ks_tests.obj: $(top_builddir)/eg/ks_tests.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ks_tests.obj -MD -MP -MF $(DEPDIR)/ks_tests.Tpo -c -o ks_tests.obj `if test -f '$(top_builddir)/eg/ks_tests.c'; then $(CYGPATH_W) '$(top_builddir)/eg/ks_tests.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/ks_tests.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ks_tests.Tpo $(DEPDIR)/ks_tests.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/ks_tests.c' object='ks_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ks_tests.obj `if test -f '$(top_builddir)/eg/ks_tests.c'; then $(CYGPATH_W) '$(top_builddir)/eg/ks_tests.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/ks_tests.c'; fi`

logit.o: $(top_builddir)/eg/logit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT logit.o -MD -MP -MF $(DEPDIR)/logit.Tpo -c -o logit.o `test -f '$(top_builddir)/eg/logit.c' || echo '$(srcdir)/'`$(top_builddir)/eg/logit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/logit.Tpo $(DEPDIR)/logit.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/logit.c' object='logit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o logit.o `test -f '$(top_builddir)/eg/logit.c' || echo '$(srcdir)/'`$(top_builddir)/eg/logit.c

logit.obj: $(top_builddir)/eg/logit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT logit.obj -MD -MP -MF $(DEPDIR)/logit.Tpo -c -o logit.obj `if test -f '$(top_builddir)/eg/logit.c'; then $(CYGPATH_W) '$(top_builddir)/eg/logit.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/logit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/logit.Tpo $(DEPDIR)/logit.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/logit.c' object='logit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o logit.obj `if test -f '$(top_builddir)/eg/logit.c'; then $(CYGPATH_W) '$(top_builddir)/eg/logit.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/logit.c'; fi`

ml_imputation.o: $(top_builddir)/eg/ml_imputation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ml_imputation.o -MD -MP -MF $(DEPDIR)/ml_imputation.Tpo -c -o ml_imputation.o `test -f '$(top_builddir)/eg/ml_imputation.c' || echo '$(srcdir)/'`$(top_builddir)/eg/ml_imputation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ml_imputation.Tpo $(DEPDIR)/ml_imputation.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/ml_imputation.c' object='ml_imputation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ml_imputation.o `test -f '$(top_builddir)/eg/ml_imputation.c' || echo '$(srcdir)/'`$(top_builddir)/eg/ml_imputation.c

ml_imputation.obj: $(top_builddir)/eg/ml_imputation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ml_imputation.obj -MD -MP -MF $(DEPDIR)/ml_imputation.Tpo -c -o ml_imputation.obj `if test -f '$(top_builddir)/eg/ml_imputation.c'; then $(CYGPATH_W) '$(top_builddir)/eg/ml_imputation.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/ml_imputation.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ml_imputation.Tpo $(DEPDIR)/ml_imputation.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/ml_imputation.c' object='ml_imputation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ml_imputation.obj `if test -f '$(top_builddir)/eg/ml_imputation.c'; then $(CYGPATH_W) '$(top_builddir)/eg/ml_imputation.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/ml_imputation.c'; fi`

normalization_demo.o: $(top_builddir)/eg/normalization_demo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT normalization_demo.o -MD -MP -MF $(DEPDIR)/normalization_demo.Tpo -c -o normalization_demo.o `test -f '$(top_builddir)/eg/normalization_demo.c' || echo '$(srcdir)/'`$(top_builddir)/eg/normalization_demo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/normalization_demo.Tpo $(DEPDIR)/normalization_demo.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/normalization_demo.c' object='normalization_demo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o normalization_demo.o `test -f '$(top_builddir)/eg/normalization_demo.c' || echo '$(srcdir)/'`$(top_builddir)/eg/normalization_demo.c

normalization_demo.obj: $(top_builddir)/eg/normalization_demo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT normalization_demo.obj -MD -MP -MF $(DEPDIR)/normalization_demo.Tpo -c -o normalization_demo.obj `if test -f '$(top_builddir)/eg/normalization_demo.c'; then $(CYGPATH_W) '$(top_builddir)/eg/normalization_demo.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/normalization_demo.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/normalization_demo.Tpo $(DEPDIR)/normalization_demo.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/normalization_demo.c' object='normalization_demo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o normalization_demo.obj `if test -f '$(top_builddir)/eg/normalization_demo.c'; then $(CYGPATH_W) '$(top_builddir)/eg/normalization_demo.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/normalization_demo.c'; fi`

ols.o: $(top_builddir)/eg/ols.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ols.o -MD -MP -MF $(DEPDIR)/ols.Tpo -c -o ols.o `test -f '$(top_builddir)/eg/ols.c' || echo '$(srcdir)/'`$(top_builddir)/eg/ols.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ols.Tpo $(DEPDIR)/ols.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/ols.c' object='ols.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ols.o `test -f '$(top_builddir)/eg/ols.c' || echo '$(srcdir)/'`$(top_builddir)/eg/ols.c

ols.obj: $(top_builddir)/eg/ols.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ols.obj -MD -MP -MF $(DEPDIR)/ols.Tpo -c -o ols.obj `if test -f '$(top_builddir)/eg/ols.c'; then $(CYGPATH_W) '$(top_builddir)/eg/ols.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/ols.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ols.Tpo $(DEPDIR)/ols.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/ols.c' object='ols.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ols.obj `if test -f '$(top_builddir)/eg/ols.c'; then $(CYGPATH_W) '$(top_builddir)/eg/ols.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/ols.c'; fi`

ols_oneliner.o: $(top_builddir)/eg/ols_oneliner.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ols_oneliner.o -MD -MP -MF $(DEPDIR)/ols_oneliner.Tpo -c -o ols_oneliner.o `test -f '$(top_builddir)/eg/ols_oneliner.c' || echo '$(srcdir)/'`$(top_builddir)/eg/ols_oneliner.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ols_oneliner.Tpo $(DEPDIR)/ols_oneliner.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/ols_oneliner.c' object='ols_oneliner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ols_oneliner.o `test -f '$(top_builddir)/eg/ols_oneliner.c' || echo '$(srcdir)/'`$(top_builddir)/eg/ols_oneliner.c

ols_oneliner.obj: $(top_builddir)/eg/ols_oneliner.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ols_oneliner.obj -MD -MP -MF $(DEPDIR)/ols_oneliner.Tpo -c -o ols_oneliner.obj `if test -f '$(top_builddir)/eg/ols_oneliner.c'; then $(CYGPATH_W) '$(top_builddir)/eg/ols_oneliner.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/ols_oneliner.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ols_oneliner.Tpo $(DEPDIR)/ols_oneliner.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/ols_oneliner.c' object='ols_oneliner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ols_oneliner.obj `if test -f '$(top_builddir)/eg/ols_oneliner.c'; then $(CYGPATH_W) '$(top_builddir)/eg/ols_oneliner.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/ols_oneliner.c'; fi`

parameterization.o: $(top_builddir)/eg/parameterization.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parameterization.o -MD -MP -MF $(DEPDIR)/parameterization.Tpo -c -o parameterization.o `test -f '$(top_builddir)/eg/parameterization.c' || echo '$(srcdir)/'`$(top_builddir)/eg/parameterization.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/parameterization.Tpo $(DEPDIR)/parameterization.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/parameterization.c' object='parameterization.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parameterization.o `test -f '$(top_builddir)/eg/parameterization.c' || echo '$(srcdir)/'`$(top_builddir)/eg/parameterization.c

parameterization.obj: $(top_builddir)/eg/parameterization.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT parameterization.obj -MD -MP -MF $(DEPDIR)/parameterization.Tpo -c -o parameterization.obj `if test -f '$(top_builddir)/eg/parameterization.c'; then $(CYGPATH_W) '$(top_builddir)/eg/parameterization.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/parameterization.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/parameterization.Tpo $(DEPDIR)/parameterization.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/parameterization.c' object='parameterization.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o parameterization.obj `if test -f '$(top_builddir)/eg/parameterization.c'; then $(CYGPATH_W) '$(top_builddir)/eg/parameterization.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/parameterization.c'; fi`

pmf_test.o: $(top_builddir)/eg/pmf_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pmf_test.o -MD -MP -MF $(DEPDIR)/pmf_test.Tpo -c -o pmf_test.o `test -f '$(top_builddir)/eg/pmf_test.c' || echo '$(srcdir)/'`$(top_builddir)/eg/pmf_test.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pmf_test.Tpo $(DEPDIR)/pmf_test.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/pmf_test.c' object='pmf_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pmf_test.o `test -f '$(top_builddir)/eg/pmf_test.c' || echo '$(srcdir)/'`$(top_builddir)/eg/pmf_test.c

pmf_test.obj: $(top_builddir)/eg/pmf_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pmf_test.obj -MD -MP -MF $(DEPDIR)/pmf_test.Tpo -c -o pmf_test.obj `if test -f '$(top_builddir)/eg/pmf_test.c'; then $(CYGPATH_W) '$(top_builddir)/eg/pmf_test.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/pmf_test.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pmf_test.Tpo $(DEPDIR)/pmf_test.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/pmf_test.c' object='pmf_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pmf_test.obj `if test -f '$(top_builddir)/eg/pmf_test.c'; then $(CYGPATH_W) '$(top_builddir)/eg/pmf_test.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/pmf_test.c'; fi`

simple_subsets.o: $(top_builddir)/eg/simple_subsets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT simple_subsets.o -MD -MP -MF $(DEPDIR)/simple_subsets.Tpo -c -o simple_subsets.o `test -f '$(top_builddir)/eg/simple_subsets.c' || echo '$(srcdir)/'`$(top_builddir)/eg/simple_subsets.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/simple_subsets.Tpo $(DEPDIR)/simple_subsets.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/simple_subsets.c' object='simple_subsets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple_subsets.o `test -f '$(top_builddir)/eg/simple_subsets.c' || echo '$(srcdir)/'`$(top_builddir)/eg/simple_subsets.c

simple_subsets.obj: $(top_builddir)/eg/simple_subsets.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT simple_subsets.obj -MD -MP -MF $(DEPDIR)/simple_subsets.Tpo -c -o simple_subsets.obj `if test -f '$(top_builddir)/eg/simple_subsets.c'; then $(CYGPATH_W) '$(top_builddir)/eg/simple_subsets.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/simple_subsets.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/simple_subsets.Tpo $(DEPDIR)/simple_subsets.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/simple_subsets.c' object='simple_subsets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple_subsets.obj `if test -f '$(top_builddir)/eg/simple_subsets.c'; then $(CYGPATH_W) '$(top_builddir)/eg/simple_subsets.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/simple_subsets.c'; fi`

some_cdfs.o: $(top_builddir)/eg/some_cdfs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT some_cdfs.o -MD -MP -MF $(DEPDIR)/some_cdfs.Tpo -c -o some_cdfs.o `test -f '$(top_builddir)/eg/some_cdfs.c' || echo '$(srcdir)/'`$(top_builddir)/eg/some_cdfs.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/some_cdfs.Tpo $(DEPDIR)/some_cdfs.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/some_cdfs.c' object='some_cdfs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o some_cdfs.o `test -f '$(top_builddir)/eg/some_cdfs.c' || echo '$(srcdir)/'`$(top_builddir)/eg/some_cdfs.c

some_cdfs.obj: $(top_builddir)/eg/some_cdfs.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT some_cdfs.obj -MD -MP -MF $(DEPDIR)/some_cdfs.Tpo -c -o some_cdfs.obj `if test -f '$(top_builddir)/eg/some_cdfs.c'; then $(CYGPATH_W) '$(top_builddir)/eg/some_cdfs.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/some_cdfs.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/some_cdfs.Tpo $(DEPDIR)/some_cdfs.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/some_cdfs.c' object='some_cdfs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o some_cdfs.obj `if test -f '$(top_builddir)/eg/some_cdfs.c'; then $(CYGPATH_W) '$(top_builddir)/eg/some_cdfs.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/some_cdfs.c'; fi`

t_test_by_rows.o: $(top_builddir)/eg/t_test_by_rows.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT t_test_by_rows.o -MD -MP -MF $(DEPDIR)/t_test_by_rows.Tpo -c -o t_test_by_rows.o `test -f '$(top_builddir)/eg/t_test_by_rows.c' || echo '$(srcdir)/'`$(top_builddir)/eg/t_test_by_rows.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/t_test_by_rows.Tpo $(DEPDIR)/t_test_by_rows.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/t_test_by_rows.c' object='t_test_by_rows.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o t_test_by_rows.o `test -f '$(top_builddir)/eg/t_test_by_rows.c' || echo '$(srcdir)/'`$(top_builddir)/eg/t_test_by_rows.c

t_test_by_rows.obj: $(top_builddir)/eg/t_test_by_rows.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT t_test_by_rows.obj -MD -MP -MF $(DEPDIR)/t_test_by_rows.Tpo -c -o t_test_by_rows.obj `if test -f '$(top_builddir)/eg/t_test_by_rows.c'; then $(CYGPATH_W) '$(top_builddir)/eg/t_test_by_rows.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/t_test_by_rows.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/t_test_by_rows.Tpo $(DEPDIR)/t_test_by_rows.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/t_test_by_rows.c' object='t_test_by_rows.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o t_test_by_rows.obj `if test -f '$(top_builddir)/eg/t_test_by_rows.c'; then $(CYGPATH_W) '$(top_builddir)/eg/t_test_by_rows.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/t_test_by_rows.c'; fi`

test_distances.o: $(top_builddir)/eg/test_distances.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_distances.o -MD -MP -MF $(DEPDIR)/test_distances.Tpo -c -o test_distances.o `test -f '$(top_builddir)/eg/test_distances.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_distances.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_distances.Tpo $(DEPDIR)/test_distances.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_distances.c' object='test_distances.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_distances.o `test -f '$(top_builddir)/eg/test_distances.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_distances.c

test_distances.obj: $(top_builddir)/eg/test_distances.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_distances.obj -MD -MP -MF $(DEPDIR)/test_distances.Tpo -c -o test_distances.obj `if test -f '$(top_builddir)/eg/test_distances.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_distances.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_distances.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_distances.Tpo $(DEPDIR)/test_distances.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_distances.c' object='test_distances.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_distances.obj `if test -f '$(top_builddir)/eg/test_distances.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_distances.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_distances.c'; fi`

test_fisher.o: $(top_builddir)/eg/test_fisher.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_fisher.o -MD -MP -MF $(DEPDIR)/test_fisher.Tpo -c -o test_fisher.o `test -f '$(top_builddir)/eg/test_fisher.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_fisher.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_fisher.Tpo $(DEPDIR)/test_fisher.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_fisher.c' object='test_fisher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_fisher.o `test -f '$(top_builddir)/eg/test_fisher.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_fisher.c

test_fisher.obj: $(top_builddir)/eg/test_fisher.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_fisher.obj -MD -MP -MF $(DEPDIR)/test_fisher.Tpo -c -o test_fisher.obj `if test -f '$(top_builddir)/eg/test_fisher.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_fisher.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_fisher.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_fisher.Tpo $(DEPDIR)/test_fisher.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_fisher.c' object='test_fisher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_fisher.obj `if test -f '$(top_builddir)/eg/test_fisher.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_fisher.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_fisher.c'; fi`

test_harmonic.o: $(top_builddir)/eg/test_harmonic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_harmonic.o -MD -MP -MF $(DEPDIR)/test_harmonic.Tpo -c -o test_harmonic.o `test -f '$(top_builddir)/eg/test_harmonic.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_harmonic.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_harmonic.Tpo $(DEPDIR)/test_harmonic.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_harmonic.c' object='test_harmonic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_harmonic.o `test -f '$(top_builddir)/eg/test_harmonic.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_harmonic.c

test_harmonic.obj: $(top_builddir)/eg/test_harmonic.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_harmonic.obj -MD -MP -MF $(DEPDIR)/test_harmonic.Tpo -c -o test_harmonic.obj `if test -f '$(top_builddir)/eg/test_harmonic.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_harmonic.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_harmonic.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_harmonic.Tpo $(DEPDIR)/test_harmonic.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_harmonic.c' object='test_harmonic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_harmonic.obj `if test -f '$(top_builddir)/eg/test_harmonic.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_harmonic.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_harmonic.c'; fi`

test_kl_divergence.o: $(top_builddir)/eg/test_kl_divergence.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_kl_divergence.o -MD -MP -MF $(DEPDIR)/test_kl_divergence.Tpo -c -o test_kl_divergence.o `test -f '$(top_builddir)/eg/test_kl_divergence.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_kl_divergence.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_kl_divergence.Tpo $(DEPDIR)/test_kl_divergence.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_kl_divergence.c' object='test_kl_divergence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_kl_divergence.o `test -f '$(top_builddir)/eg/test_kl_divergence.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_kl_divergence.c

test_kl_divergence.obj: $(top_builddir)/eg/test_kl_divergence.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_kl_divergence.obj -MD -MP -MF $(DEPDIR)/test_kl_divergence.Tpo -c -o test_kl_divergence.obj `if test -f '$(top_builddir)/eg/test_kl_divergence.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_kl_divergence.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_kl_divergence.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_kl_divergence.Tpo $(DEPDIR)/test_kl_divergence.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_kl_divergence.c' object='test_kl_divergence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_kl_divergence.obj `if test -f '$(top_builddir)/eg/test_kl_divergence.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_kl_divergence.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_kl_divergence.c'; fi`

test_pruning.o: $(top_builddir)/eg/test_pruning.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_pruning.o -MD -MP -MF $(DEPDIR)/test_pruning.Tpo -c -o test_pruning.o `test -f '$(top_builddir)/eg/test_pruning.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_pruning.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_pruning.Tpo $(DEPDIR)/test_pruning.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_pruning.c' object='test_pruning.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_pruning.o `test -f '$(top_builddir)/eg/test_pruning.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_pruning.c

test_pruning.obj: $(top_builddir)/eg/test_pruning.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_pruning.obj -MD -MP -MF $(DEPDIR)/test_pruning.Tpo -c -o test_pruning.obj `if test -f '$(top_builddir)/eg/test_pruning.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_pruning.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_pruning.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_pruning.Tpo $(DEPDIR)/test_pruning.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_pruning.c' object='test_pruning.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_pruning.obj `if test -f '$(top_builddir)/eg/test_pruning.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_pruning.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_pruning.c'; fi`

test_ranks.o: $(top_builddir)/eg/test_ranks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_ranks.o -MD -MP -MF $(DEPDIR)/test_ranks.Tpo -c -o test_ranks.o `test -f '$(top_builddir)/eg/test_ranks.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_ranks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_ranks.Tpo $(DEPDIR)/test_ranks.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_ranks.c' object='test_ranks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_ranks.o `test -f '$(top_builddir)/eg/test_ranks.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_ranks.c

test_ranks.obj: $(top_builddir)/eg/test_ranks.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_ranks.obj -MD -MP -MF $(DEPDIR)/test_ranks.Tpo -c -o test_ranks.obj `if test -f '$(top_builddir)/eg/test_ranks.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_ranks.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_ranks.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_ranks.Tpo $(DEPDIR)/test_ranks.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_ranks.c' object='test_ranks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_ranks.obj `if test -f '$(top_builddir)/eg/test_ranks.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_ranks.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_ranks.c'; fi`

test_regex.o: $(top_builddir)/eg/test_regex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_regex.o -MD -MP -MF $(DEPDIR)/test_regex.Tpo -c -o test_regex.o `test -f '$(top_builddir)/eg/test_regex.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_regex.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_regex.Tpo $(DEPDIR)/test_regex.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_regex.c' object='test_regex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_regex.o `test -f '$(top_builddir)/eg/test_regex.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_regex.c

test_regex.obj: $(top_builddir)/eg/test_regex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_regex.obj -MD -MP -MF $(DEPDIR)/test_regex.Tpo -c -o test_regex.obj `if test -f '$(top_builddir)/eg/test_regex.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_regex.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_regex.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_regex.Tpo $(DEPDIR)/test_regex.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_regex.c' object='test_regex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_regex.obj `if test -f '$(top_builddir)/eg/test_regex.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_regex.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_regex.c'; fi`

test_updating.o: $(top_builddir)/eg/test_updating.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_updating.o -MD -MP -MF $(DEPDIR)/test_updating.Tpo -c -o test_updating.o `test -f '$(top_builddir)/eg/test_updating.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_updating.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_updating.Tpo $(DEPDIR)/test_updating.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_updating.c' object='test_updating.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_updating.o `test -f '$(top_builddir)/eg/test_updating.c' || echo '$(srcdir)/'`$(top_builddir)/eg/test_updating.c

test_updating.obj: $(top_builddir)/eg/test_updating.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_updating.obj -MD -MP -MF $(DEPDIR)/test_updating.Tpo -c -o test_updating.obj `if test -f '$(top_builddir)/eg/test_updating.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_updating.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_updating.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_updating.Tpo $(DEPDIR)/test_updating.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/test_updating.c' object='test_updating.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_updating.obj `if test -f '$(top_builddir)/eg/test_updating.c'; then $(CYGPATH_W) '$(top_builddir)/eg/test_updating.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/test_updating.c'; fi`

transform.o: $(top_builddir)/eg/transform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transform.o -MD -MP -MF $(DEPDIR)/transform.Tpo -c -o transform.o `test -f '$(top_builddir)/eg/transform.c' || echo '$(srcdir)/'`$(top_builddir)/eg/transform.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/transform.Tpo $(DEPDIR)/transform.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/transform.c' object='transform.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transform.o `test -f '$(top_builddir)/eg/transform.c' || echo '$(srcdir)/'`$(top_builddir)/eg/transform.c

transform.obj: $(top_builddir)/eg/transform.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT transform.obj -MD -MP -MF $(DEPDIR)/transform.Tpo -c -o transform.obj `if test -f '$(top_builddir)/eg/transform.c'; then $(CYGPATH_W) '$(top_builddir)/eg/transform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/transform.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/transform.Tpo $(DEPDIR)/transform.Po
#	$(AM_V_CC)source='$(top_builddir)/eg/transform.c' object='transform.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o transform.obj `if test -f '$(top_builddir)/eg/transform.c'; then $(CYGPATH_W) '$(top_builddir)/eg/transform.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/eg/transform.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf $(top_builddir)/eg/.libs $(top_builddir)/eg/_libs
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
utilities_test.log: utilities_test
	@p='utilities_test'; \
	b='utilities_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
db_tests.log: db_tests$(EXEEXT)
	@p='db_tests$(EXEEXT)'; \
	b='db_tests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
error_test.log: error_test$(EXEEXT)
	@p='error_test$(EXEEXT)'; \
	b='error_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
factors.log: factors$(EXEEXT)
	@p='factors$(EXEEXT)'; \
	b='factors'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
nist_tests.log: nist_tests$(EXEEXT)
	@p='nist_tests$(EXEEXT)'; \
	b='nist_tests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sort_example.log: sort_example$(EXEEXT)
	@p='sort_example$(EXEEXT)'; \
	b='sort_example'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_apop.log: test_apop$(EXEEXT)
	@p='test_apop$(EXEEXT)'; \
	b='test_apop'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/apop_map_row.log: $(top_builddir)/eg/apop_map_row$(EXEEXT)
	@p='$(top_builddir)/eg/apop_map_row$(EXEEXT)'; \
	b='$(top_builddir)/eg/apop_map_row'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/binning.log: $(top_builddir)/eg/binning$(EXEEXT)
	@p='$(top_builddir)/eg/binning$(EXEEXT)'; \
	b='$(top_builddir)/eg/binning'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/boot_clt.log: $(top_builddir)/eg/boot_clt$(EXEEXT)
	@p='$(top_builddir)/eg/boot_clt$(EXEEXT)'; \
	b='$(top_builddir)/eg/boot_clt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/data_fill.log: $(top_builddir)/eg/data_fill$(EXEEXT)
	@p='$(top_builddir)/eg/data_fill$(EXEEXT)'; \
	b='$(top_builddir)/eg/data_fill'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/draw_to_db.log: $(top_builddir)/eg/draw_to_db$(EXEEXT)
	@p='$(top_builddir)/eg/draw_to_db$(EXEEXT)'; \
	b='$(top_builddir)/eg/draw_to_db'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/db_fns.log: $(top_builddir)/eg/db_fns$(EXEEXT)
	@p='$(top_builddir)/eg/db_fns$(EXEEXT)'; \
	b='$(top_builddir)/eg/db_fns'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/dot_products.log: $(top_builddir)/eg/dot_products$(EXEEXT)
	@p='$(top_builddir)/eg/dot_products$(EXEEXT)'; \
	b='$(top_builddir)/eg/dot_products'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/entropy_vector.log: $(top_builddir)/eg/entropy_vector$(EXEEXT)
	@p='$(top_builddir)/eg/entropy_vector$(EXEEXT)'; \
	b='$(top_builddir)/eg/entropy_vector'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/iv.log: $(top_builddir)/eg/iv$(EXEEXT)
	@p='$(top_builddir)/eg/iv$(EXEEXT)'; \
	b='$(top_builddir)/eg/iv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/ks_tests.log: $(top_builddir)/eg/ks_tests$(EXEEXT)
	@p='$(top_builddir)/eg/ks_tests$(EXEEXT)'; \
	b='$(top_builddir)/eg/ks_tests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/logit.log: $(top_builddir)/eg/logit$(EXEEXT)
	@p='$(top_builddir)/eg/logit$(EXEEXT)'; \
	b='$(top_builddir)/eg/logit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/fake_logit.log: $(top_builddir)/eg/fake_logit$(EXEEXT)
	@p='$(top_builddir)/eg/fake_logit$(EXEEXT)'; \
	b='$(top_builddir)/eg/fake_logit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/normalization_demo.log: $(top_builddir)/eg/normalization_demo$(EXEEXT)
	@p='$(top_builddir)/eg/normalization_demo$(EXEEXT)'; \
	b='$(top_builddir)/eg/normalization_demo'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/ols.log: $(top_builddir)/eg/ols$(EXEEXT)
	@p='$(top_builddir)/eg/ols$(EXEEXT)'; \
	b='$(top_builddir)/eg/ols'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/ols_oneliner.log: $(top_builddir)/eg/ols_oneliner$(EXEEXT)
	@p='$(top_builddir)/eg/ols_oneliner$(EXEEXT)'; \
	b='$(top_builddir)/eg/ols_oneliner'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/parameterization.log: $(top_builddir)/eg/parameterization$(EXEEXT)
	@p='$(top_builddir)/eg/parameterization$(EXEEXT)'; \
	b='$(top_builddir)/eg/parameterization'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/simple_subsets.log: $(top_builddir)/eg/simple_subsets$(EXEEXT)
	@p='$(top_builddir)/eg/simple_subsets$(EXEEXT)'; \
	b='$(top_builddir)/eg/simple_subsets'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/t_test_by_rows.log: $(top_builddir)/eg/t_test_by_rows$(EXEEXT)
	@p='$(top_builddir)/eg/t_test_by_rows$(EXEEXT)'; \
	b='$(top_builddir)/eg/t_test_by_rows'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/test_distances.log: $(top_builddir)/eg/test_distances$(EXEEXT)
	@p='$(top_builddir)/eg/test_distances$(EXEEXT)'; \
	b='$(top_builddir)/eg/test_distances'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/test_fisher.log: $(top_builddir)/eg/test_fisher$(EXEEXT)
	@p='$(top_builddir)/eg/test_fisher$(EXEEXT)'; \
	b='$(top_builddir)/eg/test_fisher'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/test_harmonic.log: $(top_builddir)/eg/test_harmonic$(EXEEXT)
	@p='$(top_builddir)/eg/test_harmonic$(EXEEXT)'; \
	b='$(top_builddir)/eg/test_harmonic'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/test_pruning.log: $(top_builddir)/eg/test_pruning$(EXEEXT)
	@p='$(top_builddir)/eg/test_pruning$(EXEEXT)'; \
	b='$(top_builddir)/eg/test_pruning'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/test_regex.log: $(top_builddir)/eg/test_regex$(EXEEXT)
	@p='$(top_builddir)/eg/test_regex$(EXEEXT)'; \
	b='$(top_builddir)/eg/test_regex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
distribution_tests.log: distribution_tests$(EXEEXT)
	@p='distribution_tests$(EXEEXT)'; \
	b='distribution_tests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
lognormal_test.log: lognormal_test$(EXEEXT)
	@p='lognormal_test$(EXEEXT)'; \
	b='lognormal_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rake_test.log: rake_test$(EXEEXT)
	@p='rake_test$(EXEEXT)'; \
	b='rake_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_kernel_ll.log: test_kernel_ll$(EXEEXT)
	@p='test_kernel_ll$(EXEEXT)'; \
	b='test_kernel_ll'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
update_via_rng.log: update_via_rng$(EXEEXT)
	@p='update_via_rng$(EXEEXT)'; \
	b='update_via_rng'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/cross_models.log: $(top_builddir)/eg/cross_models$(EXEEXT)
	@p='$(top_builddir)/eg/cross_models$(EXEEXT)'; \
	b='$(top_builddir)/eg/cross_models'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/dconstrain.log: $(top_builddir)/eg/dconstrain$(EXEEXT)
	@p='$(top_builddir)/eg/dconstrain$(EXEEXT)'; \
	b='$(top_builddir)/eg/dconstrain'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/entropy_model.log: $(top_builddir)/eg/entropy_model$(EXEEXT)
	@p='$(top_builddir)/eg/entropy_model$(EXEEXT)'; \
	b='$(top_builddir)/eg/entropy_model'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/faithful.log: $(top_builddir)/eg/faithful$(EXEEXT)
	@p='$(top_builddir)/eg/faithful$(EXEEXT)'; \
	b='$(top_builddir)/eg/faithful'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/f_test.log: $(top_builddir)/eg/f_test$(EXEEXT)
	@p='$(top_builddir)/eg/f_test$(EXEEXT)'; \
	b='$(top_builddir)/eg/f_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/fix_params.log: $(top_builddir)/eg/fix_params$(EXEEXT)
	@p='$(top_builddir)/eg/fix_params$(EXEEXT)'; \
	b='$(top_builddir)/eg/fix_params'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/hills2.log: $(top_builddir)/eg/hills2$(EXEEXT)
	@p='$(top_builddir)/eg/hills2$(EXEEXT)'; \
	b='$(top_builddir)/eg/hills2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/jack.log: $(top_builddir)/eg/jack$(EXEEXT)
	@p='$(top_builddir)/eg/jack$(EXEEXT)'; \
	b='$(top_builddir)/eg/jack'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/jacobian.log: $(top_builddir)/eg/jacobian$(EXEEXT)
	@p='$(top_builddir)/eg/jacobian$(EXEEXT)'; \
	b='$(top_builddir)/eg/jacobian'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/ml_imputation.log: $(top_builddir)/eg/ml_imputation$(EXEEXT)
	@p='$(top_builddir)/eg/ml_imputation$(EXEEXT)'; \
	b='$(top_builddir)/eg/ml_imputation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/pmf_test.log: $(top_builddir)/eg/pmf_test$(EXEEXT)
	@p='$(top_builddir)/eg/pmf_test$(EXEEXT)'; \
	b='$(top_builddir)/eg/pmf_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/some_cdfs.log: $(top_builddir)/eg/some_cdfs$(EXEEXT)
	@p='$(top_builddir)/eg/some_cdfs$(EXEEXT)'; \
	b='$(top_builddir)/eg/some_cdfs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/test_kl_divergence.log: $(top_builddir)/eg/test_kl_divergence$(EXEEXT)
	@p='$(top_builddir)/eg/test_kl_divergence$(EXEEXT)'; \
	b='$(top_builddir)/eg/test_kl_divergence'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/test_ranks.log: $(top_builddir)/eg/test_ranks$(EXEEXT)
	@p='$(top_builddir)/eg/test_ranks$(EXEEXT)'; \
	b='$(top_builddir)/eg/test_ranks'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/test_updating.log: $(top_builddir)/eg/test_updating$(EXEEXT)
	@p='$(top_builddir)/eg/test_updating$(EXEEXT)'; \
	b='$(top_builddir)/eg/test_updating'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/eg/transform.log: $(top_builddir)/eg/transform$(EXEEXT)
	@p='$(top_builddir)/eg/transform$(EXEEXT)'; \
	b='$(top_builddir)/eg/transform'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(top_builddir)/eg/$(am__dirstamp)" || rm -f $(top_builddir)/eg/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile

	EXTRA_TESTS =

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
